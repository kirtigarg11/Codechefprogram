Input:  1 -> 2 -> 3 -> 4
Output: 1 -> 4 -> 2 -> 3

Input:  1 -> 2 -> 3 -> 4 -> 5
Output: 1 -> 5 -> 2 -> 4 -> 3 









#include<bits/stdc++.h>
using namespace std;
struct Node{
  int data;
  struct Node * next;
};
void push(struct Node **head,int data1){
  
struct Node* newnode=(struct Node*)malloc(sizeof(struct Node));
newnode->next=*head;
newnode->data=data1;
*head=newnode;

}
void print(struct Node* head){
  struct Node* temp;
  temp=head;
  while(temp){
    cout<<temp->data<<" ";
    temp=temp->next;
  }
}
struct Node* middle(struct Node*head){
  struct Node *slow,*fast;
  slow=fast=head;
  while(fast&& fast->next){
    slow=slow->next;
    fast=fast->next->next;
  }
  return slow;
}
struct Node* reverse(struct Node* head){
  struct Node *prev,*cur,*next;
  prev=NULL;
  cur=head;
  next=NULL;
  while(cur){
    next=cur->next;
    cur->next=prev;
    prev=cur;
    cur=next;
  }
  head=prev;
  return head;
}
int main(){
  int n;
  cout<<"enter node";
  cin>>n;
  struct Node* head=NULL;
  
  for(int i=n;i>=1;i--){
   
    push(&head,i);
  }
struct Node* mid=middle(head);

  struct Node *head1,*head2;
  head1=head;
  head2=mid->next;
  mid->next=NULL;
  head2=reverse(head2);
  struct Node * temp1;
  temp1=(struct Node*)malloc(sizeof(struct Node));
  temp1->data=0;
  temp1->next=NULL;
  head=temp1;
  while(head1||head2){
    if(head1){
      temp1->next=head1;
      head1=head1->next;
      temp1=temp1->next;
    }
    if(head2){
      temp1->next=head2;
      head2=head2->next;
      temp1=temp1->next;

    }
  }
  head=head->next;
  cout<<"reorder list";
  print(head);
}
